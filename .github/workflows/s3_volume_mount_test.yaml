name: s3_volume_mount_test
run-name: ${{ github.actor }} Triggered Action.
# on:
#   [push]
on:
  workflow_dispatch # Only triggering workflow manually.
env:
  AWS_REGION : "us-west-2"
  AWS_ACCOUNT: "320567679581"
  AWS_IAM_ROLE: "GitHub_SelfHostedRunner"
  AWS_SUBNET_ID: "subnet-052cc9eed3a81fe9f"
#   AWS_EC2_TYPE: "g5.4xlarge"
#   AWS_EC2_AMI: "ami-0be8c991ba98c2c8d" # Deep Learning AMI GPU PyTorch 2.0.1 (Ubuntu 20.04) 20230827
  AWS_EC2_TYPE: "t2.large"
  AWS_EC2_AMI: "ami-03f65b8614a860c29" # Temp: ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230516
  AWS_SG_ID: "sg-0ca59ff4d9e407145" # defaullt SG with wide open egress traffic.

  MOUNT_PATH: "/mnt/s3-bucket"
  S3_BUCKET_NAME: "llama-base-models"
# permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
#   checks: write
#   pull-requests: write
jobs:
  start-self-hosted-ec2-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
        label: ${{ steps.start-ec2-runner.outputs.label }}
        ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        id: configure_aws_security_credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/${{ env.AWS_IAM_ROLE }}
          role-session-name: GitHubOIDCSession
          aws-region: ${{ env.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }} # added to repo secrets.
          ec2-image-id: ${{ env.AWS_EC2_AMI }}
          ec2-instance-type: ${{ env.AWS_EC2_TYPE }}
          subnet-id: ${{ env.AWS_SUBNET_ID }}
          security-group-id: ${{ env.AWS_SG_ID }}
          # GitHub_EC2AccessToAWSServicesRole is associated with Instance Profile is assumed by newly configured EC2 instance(s) 
          # to perform permitted Actions on AWS resources.
          iam-role-name: GitHub_EC2AccessToAWSServicesInstanceProfile # includes AmazonS3ReadOnlyAccess
          aws-resource-tags: >
            [
              {"Key": "Purpose", "Value": "Testing S3 bucket mounted as a FS volume"},
              {"Key": "Name", "Value": "ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]
  run_workload_on_the_runner:
    name: Execute the job on the runner
    needs: start-self-hosted-ec2-runner                              # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-self-hosted-ec2-runner.outputs.label }} # run the job on the newly created runner
    steps:

      - name: "Updating apt-get and installing s3fs"
        run: |
          sudo apt-get update -y
          sudo apt-get install s3fs -y 

      - name: "Mounting S3 bucket as a FS volume to /mnt/s3-bucket."
        run: |
          sudo mkdir -p ${{ env.MOUNT_PATH }}
          sudo s3fs ${{ env.S3_BUCKET_NAME }} ${{ env.MOUNT_PATH }} \
              -o iam_role=GitHub_EC2AccessToAWSServicesRole \
              -o use_cache=/tmp \
              -o allow_other \
              -o uid=1001 \
              -o mp_umask=002 \
              -o multireq_max=5 \
              -o use_path_request_style \
              -o endpoint=us-west-2 \
              -o url=https://s3.${{ env.AWS_REGION }}.amazonaws.com

          df -h

      - name: "ls -la"
        run: |
          ls -la ${{ env.MOUNT_PATH }}
        
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-self-hosted-ec2-runner # required to get output from the start-runner job
      - run_workload_on_the_runner   # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
       - name: Configure AWS credentials
         id: configure_aws_security_credentials
         uses: aws-actions/configure-aws-credentials@v2
         with:
           role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/${{ env.AWS_IAM_ROLE }}
           aws-region: ${{ env.AWS_REGION }}
       - name: Stop EC2 runner
         uses: machulav/ec2-github-runner@v2
         with:
           mode: stop
           github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
           label: ${{ needs.start-self-hosted-ec2-runner.outputs.label }}
           ec2-instance-id: ${{ needs.start-self-hosted-ec2-runner.outputs.ec2-instance-id }}